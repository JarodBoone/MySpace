var vrDisplay,vrControls,arView,canvas,camera,scene,renderer,BOX_DISTANCE=1.5,BOX_SIZE=.25,BOX_QUANTITY=6,boxesAdded=!1;function init(){(renderer=new THREE.WebGLRenderer({alpha:!0})).setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),renderer.autoClear=!1,canvas=renderer.domElement,document.body.appendChild(canvas),scene=new THREE.Scene,arView=new THREE.ARView(vrDisplay,renderer),camera=new THREE.ARPerspectiveCamera(vrDisplay,60,window.innerWidth/window.innerHeight,vrDisplay.depthNear,vrDisplay.depthFar),vrControls=new THREE.VRControls(camera),window.addEventListener("resize",onWindowResize,!1),update()}function update(){renderer.clearColor(),arView.render(),camera.updateProjectionMatrix(),vrControls.update(),boxesAdded||camera.position.y||addBoxes(),renderer.clearDepth(),renderer.render(scene,camera),vrDisplay.requestAnimationFrame(update)}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function addBoxes(){for(var e=0;e<BOX_QUANTITY;e++){var r=2*Math.PI*(e/BOX_QUANTITY),n=new THREE.BoxGeometry(BOX_SIZE,BOX_SIZE,BOX_SIZE),i=new THREE.MeshNormalMaterial,a=new THREE.Mesh(n,i);a.position.set(Math.cos(r)*BOX_DISTANCE,camera.position.y-.25,Math.sin(r)*BOX_DISTANCE),scene.add(a)}boxesAdded=!0}THREE.ARUtils.getARDisplay().then(function(e){e?(vrDisplay=e,init()):THREE.ARUtils.displayUnsupportedMessage()});